/*    Base
------------------------------------------------------- */

/*    Variables  -------------------------------------------- */

$white: #fefefe;

$gray: #bababa;
$gray-d: #979797;
$gray-l: #f5f5f5;

$green: #31ba00;

$blue: #e7fdff;
$blue-d: #5c809c;
$blue-trans: rgba(102, 181, 251, 0.92);

$brand-fb: #3B5998;
$brand-tw: #00A0D1;

$vert-space: 8px;
$font-main: 'special_eliteregular', arial, sans-serif;

//*    Reset  -------------------------------------------- */

/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
   */

   html, body, div, span, applet, object, iframe,
   h1, h2, h3, h4, h5, h6, p, blockquote, pre,
   a, abbr, acronym, address, big, cite, code,
   del, dfn, em, img, ins, kbd, q, s, samp,
   small, strike, strong, sub, sup, tt, var,
   b, u, i, center,
   dl, dt, dd, ol, ul, li,
   fieldset, form, label, legend,
   table, caption, tbody, tfoot, thead, tr, th, td,
   article, aside, canvas, details, embed,
   figure, figcaption, footer, header, hgroup,
   menu, nav, output, ruby, section, summary,
   time, mark, audio, video {
     margin: 0;
     padding: 0;
     border: 0;
     font-size: 100%;
     font: inherit;
     vertical-align: baseline;
 }
 /* HTML5 display-role reset for older browsers */
 article, aside, details, figcaption, figure,
 footer, header, hgroup, menu, nav, section {
     display: block;
 }
 body {
     line-height: 1;
 }
 ol, ul {
     list-style: none;
 }
 blockquote, q {
     quotes: none;
 }
 blockquote:before, blockquote:after,
 q:before, q:after {
     content: '';
     content: none;
 }
 table {
     border-collapse: collapse;
     border-spacing: 0;
 }

/**
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    contenteditable attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that are clearfixed.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */
 .cf:before,
 .cf:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.cf:after {
    clear: both;
}

/**
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */
 .cf {
    *zoom: 1;
}

/*     Fonts
------------------------------------------------------- */

@font-face {
    font-family: 'special_eliteregular';
    src: font-url('specialelite_regular_macroman/SpecialElite-webfont.eot');
    src: font-url('specialelite_regular_macroman/SpecialElite-webfont.eot?#iefix') format('embedded-opentype'),
    font-url('specialelite_regular_macroman/SpecialElite-webfont.woff') format('woff'),
    font-url('specialelite_regular_macroman/SpecialElite-webfont.ttf') format('truetype'),
    font-url('specialelite_regular_macroman/SpecialElite-webfont.svg#special_eliteregular') format('svg');
    font-weight: normal;
    font-style: normal;

}


/*    Elements
------------------------------------------------------- */

.loading-animate {
 width: 30px;
 animation: spin-back-and-forth .5s infinite linear;
 -webkit-animation: spin-back-and-forth .5s infinite linear;   animation-direction: alternate;
 -webkit-animation-direction: alternate;
 -webkit-transform-origin: 0 50%;
 margin-left: 30px;
}

@-webkit-keyframes spin-back-and-forth {
 from {
  -webkit-transform: rotateZ(0deg);
  -webkit-transition-timing-function: ease-in;
}
to {
  -webkit-transform: rotateZ(180deg);
}
}

/*    Mixins
------------------------------------------------------- */

@mixin bp($point) {

  $bp-med-min: "(min-width: 501px)";

  @if $point == med-min {
    @media #{$bp-med-min} { @content; }
}

@if $point == retina {
    @media only screen and (-webkit-min-device-pixel-ratio: 1.5),
    only screen and (-o-min-device-pixel-ratio: 3/2),
    only screen and (min--moz-device-pixel-ratio: 1.5),
    only screen and (min-device-pixel-ratio: 1.5) {
        @content;
    }
}
}

@mixin big-enough {
 @media screen and (min-height: 700px) and (min-width: 500px)  {
  @content;
}
}

@mixin size-1 {
 font-size: 40px;
 line-height: 55px;
}

@mixin size-2 {
 font-size: 34px;
 line-height: 46px;
}

@mixin size-3 {
 font-size: 28px;
 line-height: 38.5px;
}

@mixin size-4 {
 font-size: 20px;
 line-height: 27.5px;
}

@mixin size-5 {
 font-size: 16px;
 line-height: 22px;
}

@mixin size-6 {
 font-size: 10px;
 line-height: 14px;
}

%bg-draw {
   background-image: url("noisy_grid.png");

   @include bp(retina) {
    background-image: url("noisy_grid_@2X.png");
    background-size: 150px auto;
}
}

%inset {
    @include bp(med-min) {
        box-shadow: 0 2px 8px #999;
    }
}

/*     Header sizes
------------------------------------------------------- */

h1 {
    @include size-2;
    @include bp(med-min) {
        @include size-1;
    }
}
h2 {
    @include size-3;
    @include bp(med-min) {
        @include size-2
    }
}
h3 {
    @include size-4;
    @include bp(med-min) {
        @include size-3;
    }
}
h4 {
    @include size-5;
    @include bp(med-min) {
        @include size-4;
    }
}
h5 {
    @include size-6;
    @include bp(med-min) {
        @include size-5;
    }
}
h6 {
    @include size-6;
}

/*    Utility
------------------------------------------------------- */

.text-center {
    text-align: center;
}

.pad {
    padding: 0 4px;

    @include bp(med-min) {
      padding: 0;
  }
}

.hidden {
  display: none;
}

/*    Global
------------------------------------------------------- */

body {
 font-family: $font-main;
 color: #010101;
}

em {
    text-decoration: underline;
}

.wrapper {
 margin: auto;
 width: 500px;
 max-width: 100%;
 position: relative;
 height: 100%;
 padding-bottom: $vert-space;
 @extend .cf;
}


.button {
    display: block;
    border: none;
    border-radius: 2px;
    box-shadow: 0 1px 1px 0px #000;
    cursor: pointer;
}

.button-green {
  @extend .button;
  background-color: $green;
  padding: 2px 12px 0px;
}

/*   Overlays
  ------------------------------------------------------- */
.error-overlay {
  z-index: 10;
  background-color: $blue-trans;
  position: fixed;
  bottom: 0;
  top: 0;
  left: 0;
  right: 0;
  text-align: center;
}

.error-flash {
  color: $white;
  @include size-2;
  padding: 60px 4px 0;

  @include bp(med-min) {
    @include size-1;
    padding: 200px 20px 0;
  }
}